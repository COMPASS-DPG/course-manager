// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Here goes models

enum ProviderStatus {
  pending
  verified
  rejected
}

enum CourseVerificationStatus {
  pending
  accepted
  rejected
}

enum CourseStatus {
  active
  inactive
  archived
}

enum CourseProgressStatus {
  inProgress
  completed
}

enum TransactionType {
  purchase
  creditRequest
  settlement
}


model Admin {
  id        Int     @id @default(autoincrement())
  name      String  
  email     String  @unique
  password  String 
  walletId  Int
}

model Provider {
  id          Int             @id @default(autoincrement())
  name        String  
  email       String          @unique
  password    String 
  walletId    Int
  paymentInfo Json?
  status      ProviderStatus  @default(pending)
  courses     Course[]        
}

model Course {
  id                  Int                       @id @default(autoincrement())
  providerId          Int
  title               String
  description         String
  courseLink          String
  imgLink             String
  credits             Int
  noOfLessons         Int
  language            String[]
  duration            Int
  competency          Json
  author              String
  avgRating           Float?
  status              CourseStatus
  availabilityTime    DateTime?
  verificationStatus  CourseVerificationStatus  @default(pending)
  cqfScore            Int?
  impactScore         Float?
  provider            Provider                  @relation(fields: [providerId], references: [id])
  userCourses         UserCourse[]              
}

model UserCourse {
  id                        Int                       @id @default(autoincrement())
  userId                    String
  courseId                  Int
  purchasedAt               DateTime
  status                    CourseProgressStatus
  courseCompletionScore     Float?
  rating                    Int?
  feedback                  String?
  course                    Course                    @relation(fields: [courseId], references: [id])
}

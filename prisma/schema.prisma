// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Here goes models

enum ProviderStatus {
  PENDING
  VERIFIED
  REJECTED
}

enum WalletType {
  ADMIN
  PROVIDER
  CONSUMER
}

enum CourseVerificationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum CourseStatus {
  UNARCHIVED
  ARCHIVED
}

enum CourseProgressStatus {
  IN_PROGRESS
  COMPLETED
}

model Admin {
  id        String  @id @default(uuid())
  name      String  
  email     String  @unique
  password  String 
  walletId  Int     @unique
}

model Provider {
  id          String          @id @default(uuid())
  name        String  
  email       String          @unique
  password    String 
  paymentInfo Json?
  status      ProviderStatus  @default(PENDING)
  courses     Course[]
  rejectionReason String?
}


model Course {
  id                  Int                       @id @default(autoincrement())
  providerId          String
  title               String
  description         String
  courseLink          String
  imgLink             String
  credits             Int
  noOfLessons         Int?
  language            String[]
  duration            Float
  competency          Json
  author              String
  avgRating           Float?
  status              CourseStatus              @default(UNARCHIVED)
  startDate           DateTime?
  endDate             DateTime?
  verificationStatus  CourseVerificationStatus  @default(PENDING)
  cqfScore            Int?
  impactScore         Float?
  rejectionReason     String?
  provider            Provider                  @relation(fields: [providerId], references: [id])
  userCourses         UserCourse[]              
}

model UserCourse {
  id                        Int                       @id @default(autoincrement())
  userId                    String                    @db.Uuid
  courseId                  Int
  purchasedAt               DateTime                  @default(now())
  status                    CourseProgressStatus      @default(IN_PROGRESS)
  courseCompletionScore     Float?
  rating                    Int?
  feedback                  String?
  course                    Course                    @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([userId, courseId])
}

enum TransactionType {
  PURCHASE
  CREDIT_REQUEST
  SETTLEMENT
}
